{"version":3,"sources":["assets/backgroundImage1.svg","assets/backgroundImage2.svg","assets/logo.svg","assets/jasmineCarbone.jpg","assets/sharonYi.jpg","assets/mehdiPilehvarian.jpg","assets/vinceDang.jpg","components/AnimatedBackground.js","components/Welcome.js","components/Header.js","components/Sidebar.js","components/firebase.js","components/Thanks.js","components/CreateAPoll.js","components/Polls.js","components/FooterDashboard.js","components/Dashboard.js","components/ViewPolls.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AnimatedBackground","className","id","alt","src","graphic1","graphic2","Component","uiConfig","signInFlow","signInOptions","provider","firebase","auth","GoogleAuthProvider","PROVIDER_ID","customParameters","prompt","firebaseui","AnonymousAuthProvider","Welcome","getAuthentication","this","props","onAuthStateChanged","user","setPersistence","Auth","Persistence","SESSION","then","loggedIn","to","logo","firebaseAuth","Header","href","Sidebar","state","logOutRedirect","handleSignOut","isSidebarHidden","onClick","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Thanks","resetForm","CreateAPoll","handleChange","e","setState","target","value","handleSubmit","userId","preventDefault","pollToAdd","question","answer1","answer2","votes1","votes2","usersVotedList","pollCreatedBy","publicPollsRef","database","ref","Swal","fire","icon","title","text","push","thanksPopup","on","response","poll","val","newPoll","key","eachPoll","pollID","pollName","pollList","onSubmit","htmlFor","maxlength","placeholder","type","onChange","autoComplete","required","Polls","incrementAnswer1Count","currentTarget","currentPoll","pollQuestionRef","pName","userList","includes","vote","child","pNumber","update","answer1TotalVotes","incrementAnswer2Count","voted","answer2TotalVotes","pollQuestions","fbData","pollData","pollContent","Object","values","pollNum","pollNumbers","map","index","optionA","optionB","totalVotesA","totalVotesB","pollQ","currentPollQ","disabled","FooterDashboard","Dashboard","handleClick","currentView","hidden","handleSidebarClick","signOut","faCaretDown","faPlus","ViewPolls","About","jasmine","rel","faGithubAlt","faTwitter","faEnvelope","mehdi","vince","sharon","App","setAuthentication","userInfo","uid","basename","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d447da8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundImage1.9fb0d5b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundImage2.7897cea6.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f8abd45d.svg\";","module.exports = __webpack_public_path__ + \"static/media/jasmineCarbone.7e5d0b53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sharonYi.c21f3cf5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mehdiPilehvarian.6b3f1d4e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vinceDang.c68aa3ac.jpg\";","import React, { Component } from 'react';\nimport graphic1 from './../assets/backgroundImage1.svg';\nimport graphic2 from './../assets/backgroundImage2.svg';\n\nclass AnimatedBackground extends Component {\n    render(){\n        return (\n            <div>\n                <div className='animatedBackground'>\n                    <img id='imageOne' className='animatedImage' alt='floating empty poll graphic' src={graphic1}></img>\n                    <img id='imageTwo' className='animatedImage' alt='floating empty poll graphic' src={graphic2}></img>\n                    <img id='imageThree' className='animatedImage' alt='floating empty poll graphic' src={graphic1}></img>\n                    <img id='imageFour' className='animatedImage' alt='floating empty poll graphic' src={graphic2}></img>\n                    <img id='imageFive' className='animatedImage' alt='floating empty poll graphic' src={graphic1}></img>\n                    <img id='imageSix' className='animatedImage' alt='floating empty poll graphic' src={graphic2}></img>\n                </div>\n                <div className='animatedBackground'>\n                    <img id='imageSeven' className='animatedImage2' alt='floating empty poll graphic' src={graphic1}></img>\n                    <img id='imageEight' className='animatedImage2' alt='floating empty poll graphic' src={graphic2}></img>\n                    <img id='imageNine' className='animatedImage2' alt='floating empty poll graphic' src={graphic1}></img>\n                    <img id='imageTen' className='animatedImage2' alt='floating empty poll graphic' src={graphic2}></img>\n                    <img id='imageEleven' className='animatedImage2' alt='floating empty poll graphic' src={graphic1}></img>\n                    <img id='imageTwelve' className='animatedImage2' alt='floating empty poll graphic' src={graphic2}></img>\n                </div>\n                <div className='animatedBackground'>\n                    <img id='imageThirteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic1}></img>\n                    <img id='imageFourteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic2}></img>\n                    <img id='imageFifteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic1}></img>\n                    <img id='imageSixteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic2}></img>\n                    <img id='imageSeventeen' className='animatedImage3' alt='floating empty poll graphic' src={graphic1}></img>\n                    <img id='imageEighteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic2}></img>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AnimatedBackground;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport logo from './../assets/logo.svg';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport * as firebaseui from 'firebaseui';\nimport 'firebase/auth';\nimport AnimatedBackground from './AnimatedBackground';\n\nconst uiConfig = {\n    signInFlow: 'popup',\n    signInOptions: [\n        {\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            customParameters: {\n                prompt: 'select_account'\n            },\n        },\n        firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID,\n    ],\n};\n\nclass Welcome extends Component {\n    componentDidMount() {\n        const { getAuthentication } = this.props;\n        firebase.auth().onAuthStateChanged(user => {\n            firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\n            .then(function () {\n                if (user) {\n                    getAuthentication(user);\n                }\n                return true;\n            })\n        })\n    }\n    render() {\n\n        const {loggedIn} = this.props;\n\n        if (loggedIn) {\n            return <Redirect to='/dashboard' />\n        }\n        \n        return (\n            <div>\n                <div className='welcomeSplash'>\n                    <div className='wrapper'>\n                        <img className='logo bounce-in-fwd' src={logo} alt='versus logo'></img>\n                        <p>Ready to find out if people prefer pineapple or ketchup on their pizza? Look no further. Build an unlimited amount of polls and vote on others and make your opinion known to the world!</p>\n                        <p className='miniText'>You can only vote once, so make it count!</p>\n                        <div className='userLoginHome'>\n                            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n                        </div>\n                    </div>\n                </div>\n                <AnimatedBackground />\n            </div>\n        );\n    }\n}\n\nexport default Welcome;","import React, { Component } from 'react';\nimport logo from './../assets/logo.svg'\n\nclass Header extends Component {\n  render() {\n\n    return (\n      <div>\n       <a href='anonymousVotingBooth/dashboard'><img className='logo' src={logo} alt='logo for voted app'></img></a> \n      </div>\n    );\n  };\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../App.scss';\nimport Header from './Header';\nimport 'firebase/auth';\n\nclass Sidebar extends Component {\n    constructor() {\n        super();\n        this.state = {\n            logOutRedirect: false\n        };\n    }\n\n    render() {    \n        const {\n            handleSignOut,\n            isSidebarHidden\n        } = this.props;\n\n        return (\n            <div className={`sideBar${isSidebarHidden ? ' mobileHidden' : ''}`} >\n                <Header />\n                <NavLink className='sideBarLinks' to='/dashboard/viewpolls'>view your polls</NavLink>\n                <NavLink className='sideBarLinks' to='/about'>about us</NavLink>\n                <NavLink className='sideBarLinks' onClick={handleSignOut} to='/'>log out</NavLink>\n            </div>\n        );\n    };\n};\n\nexport default Sidebar","// import React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyARn2Fa86nETijeyn-afjgyoHlkusUXX4I\",\n    authDomain: \"anon-voting-booth.firebaseapp.com\",\n    databaseURL: \"https://anon-voting-booth.firebaseio.com\",\n    projectId: \"anon-voting-booth\",\n    storageBucket: \"anon-voting-booth.appspot.com\",\n    messagingSenderId: \"297294494416\",\n    appId: \"1:297294494416:web:e83fa5e90c4ea456967cd5\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from 'react';\n\nclass Thanks extends Component {\n    render () {\n        return (\n            <div id='thanksPopup' className='thanksPopup'>\n                <h2>Thanks for adding a poll!</h2>\n                <button onClick={this.props.resetForm} className='resetForm'>Add another?</button>\n            </div>\n        )\n    }\n}\n\nexport default Thanks;","import React, { Component } from 'react';\nimport firebase from './firebase';\nimport Swal from 'sweetalert2';\nimport Thanks from './Thanks';\n\nclass CreateAPoll extends Component {\n  constructor(){\n    super();\n    this.state = {\n      question: '',\n      answer1: '',\n      answer2: '',\n      thanksPopup: null\n    }\n  }\n\n  componentDidMount() {\n    // Connecting app to firebase\n    const dbRef = firebase.database().ref();\n    // Storing firebase into variable for use\n    dbRef.on('value', (response) => {\n      const poll = response.val();\n      const newPoll = []\n        for ( let key in poll ) {\n          const eachPoll = {\n            pollID: key,\n            pollName: poll[key]\n          }\n        newPoll.push(eachPoll)\n        }\n        // Converting the object into an array and storing into state\n        this.setState({\n          pollList: newPoll\n        });\n    });\n  }\n\n  // Binding the input, and setting new values in state\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    })\n  }\n\n  // On submitting a poll, grab user's inputs from the form, add them to firebase\n  handleSubmit = (e) => {\n    const {userId} = this.props;\n    e.preventDefault();  \n    const pollToAdd = {\n      question: this.state.question,\n      answer1: this.state.answer1,\n      answer2: this.state.answer2,\n      votes1: 0,\n      votes2: 0,\n      usersVotedList: '',\n      pollCreatedBy: userId\n    };\n    const publicPollsRef = firebase.database().ref('/publicPolls');\n    if (this.state.answer1 === this.state.answer2) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Are you trying to swing the polls? Your answers cannot be the same!!',\n      })\n    } else if (pollToAdd.question !== '') {\n      publicPollsRef.push(pollToAdd);\n      this.setState({\n        question: '',\n        answer1: '',\n        answer2: '',\n        thanksPopup: 'showThankYou',\n      });\n    }\n  }\n  // resets form to add more and sets thanks state to null\n  resetForm = (e) => {\n    this.setState ({\n        thanksPopup: null,\n    })\n  }\n  render() {\n\n    const {\n      handleSubmit,\n      handleChange,\n      resetForm,\n      state: {\n        thanksPopup,\n        question,\n        answer1,\n        answer2\n      } \n    } = this;\n\n    return (\n      <div className='wrapper'>\n        {thanksPopup !== 'showThankYou' ? \n        <form className='createPoll' id='createPoll' onSubmit={handleSubmit}>\n          <h2>Add your poll below</h2>\n          <label htmlFor='question'></label>\n          <input id='question' maxlength='120' placeholder='Add your question' type='text' onChange={handleChange} value={question} autoComplete='off' required></input>\n          <label htmlFor='answer1'></label>\n          <input id='answer1' maxlength='20' placeholder='Answer Option One' type='text' onChange={handleChange}value={answer1} autoComplete='off' required></input>\n          <label htmlFor='answer2'></label>\n          <input id='answer2' maxlength='20' placeholder='Answer Option Two' type='text' onChange={handleChange}value={answer2} autoComplete='off' required></input>\n          <button className='addPollButton' type='submit'>Add Poll!</button>\n        </form> : <Thanks resetForm={resetForm}/>\n        }\n      </div>\n    );\n  };\n};\n\nexport default CreateAPoll;","import React, { Component } from 'react';\nimport firebase from './firebase';\nimport '../App.scss';\nimport 'firebase/auth';\n\nclass Polls extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pollQuestions: [],\n      currentPoll: [],\n      answer1TotalVotes: 0,\n      answer2TotalVotes: 0,\n      pollQuestionRef: firebase.database().ref('/publicPolls')\n    };\n  }\n\n  componentDidMount() {\n    const { pollQuestionRef } = this.state;\n    // Going to firebase and check each object (Poll) to see if the first one is checked/voted and storing them into an array\n    pollQuestionRef.on('value', fbData => {\n      const pollData = fbData.val();\n      const pollContent = Object.values(pollData);\n      const pollNum = [];\n\n      for (let key in pollData) {\n        const pollNumbers = {\n          pNumber: key,\n          pName: pollData[key],\n        }\n        pollNum.push(pollNumbers);\n      }\n      this.setState({\n        pollQuestions: pollContent,\n        currentPoll: pollNum,\n      });\n    });\n  }\n\n  // Incrementing the option one every time a user votes for option one in any vote poll\n  incrementAnswer1Count = (e) => {\n    e.preventDefault();\n    const { id } = e.currentTarget;\n    const {\n      state: {\n        currentPoll,\n        pollQuestionRef,\n      },\n      props: {\n        userId\n      }\n    } = this;\n\n    const usersVotedList = currentPoll[id].pName.usersVotedList;\n    const userList = [];\n\n    for (let user in usersVotedList) {\n      userList.push(usersVotedList[user])\n    }\n    if (!userList.includes(userId)) {\n      const vote = currentPoll[id].pName.votes1 + 1;\n      pollQuestionRef.child(`${currentPoll[id].pNumber}`).child('usersVotedList').push(userId);\n      pollQuestionRef.child(`${currentPoll[id].pNumber}`).update({\n        votes1: vote,\n      });\n      this.setState({\n        answer1TotalVotes: vote,\n      });\n    }\n  }\n\n  // Incrementing the option two every time a user votes for option two in any vote poll\n  incrementAnswer2Count = (e) => {\n    e.preventDefault();\n    const { id } = e.currentTarget;\n    const { currentPoll, pollQuestionRef } = this.state;\n    const { userId } = this.props;\n    const usersVotedList = currentPoll[id].pName.usersVotedList;\n    const userList = [];\n    for (let user in usersVotedList) {\n      userList.push(usersVotedList[user])\n    }\n    if (!userList.includes(userId)) {\n      currentPoll[id].voted = true;\n      const vote = currentPoll[id].pName.votes2 + 1;\n      pollQuestionRef.child(`${currentPoll[id].pNumber}`).child('usersVotedList').push(userId);\n      pollQuestionRef.child(`${currentPoll[id].pNumber}`).update({\n        votes2: vote,\n      });\n      this.setState({\n        answer2TotalVotes: vote,\n      });\n    }\n  }\n\n  render() {\n    const {\n      incrementAnswer1Count,\n      incrementAnswer2Count,\n      state: {\n        pollQuestions,\n        currentPoll\n      },\n      props: {\n        userId\n      }\n    } = this;\n\n    return (\n      <div className=\"wrapper\">\n        <ul className='pollsList'>\n          {\n            pollQuestions.map((value, index) => {\n              const optionA = value.answer1;\n              const optionB = value.answer2;\n              const totalVotesA = value.votes1;\n              const totalVotesB = value.votes2;\n              const pollQ = value.question;\n              const currentPollQ = index;\n              let voted = currentPoll[index].voted;\n              const usersVotedList = currentPoll[index].pName.usersVotedList;\n              const userList = [];\n              for (let user in usersVotedList) {\n                userList.push(usersVotedList[user])\n              }\n              if (userList.includes(userId)) {\n                voted = true;\n              }\n              return (\n                <li key={index} className='pollItem'>\n                  <div className=\"pollQuestion\">\n                    <p>{pollQ}</p>\n                  </div>\n                  <div className=\"voteButtons\">\n                    <button\n                      id={currentPollQ}\n                      onClick={incrementAnswer1Count}\n                      value='votes1'\n                      disabled={voted ? true : false}\n                    >\n                      <p className=\"options\">{optionA}</p>\n\n                      <p className={voted ? 'showVotes' : null}>\n                        {totalVotesA} votes\n                          </p>\n                    </button>\n                    <button\n                      id={currentPollQ}\n                      onClick={incrementAnswer2Count}\n                      value='votes2'\n                      disabled={voted ? true : false}\n                    >\n                      <p className=\"options\">{optionB}</p>\n                      <p className={voted ? 'showVotes' : null}>\n                        {totalVotesB} votes\n                          </p>\n                    </button>\n                  </div>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n    );\n  };\n};\n\nexport default Polls;","import React, { Component } from 'react';\n\nclass FooterDashboard extends Component {\n  render() {\n\n    return (\n      <footer>\n        <div className='footerContent'>\n          <p>copyright &copy; 2019 &nbsp;-&nbsp; all rights reserved </p>\n          <p>sharon yi, jasmine carbone, mehdi pilehvarian, vincent dang</p>\n        </div>\n      </footer>\n    );\n  };\n};\n\nexport default FooterDashboard;","import React, { Component } from 'react';\nimport Sidebar from './Sidebar';\nimport CreateAPoll from './CreateAPoll';\nimport Polls from './Polls';\nimport '../App.scss';\nimport FooterDashboard from './FooterDashboard'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons'\n\nclass Dashboard extends Component {\n    constructor() {\n        super();\n        this.state = {\n            currentView: null,\n            hidden: true,\n            isSidebarHidden: true,\n        }\n    }\n\n    // this handle click shows the create a poll section above 'polls' when clicked. \n    handleClick = (e) => {\n        this.setState({\n            currentView: e.target.id,\n            hidden: false,\n        })\n    }\n\n    handleSidebarClick = () => {\n\n        const {\n            isSidebarHidden\n        } = this.state;\n\n        this.setState({\n            isSidebarHidden: !isSidebarHidden\n        })\n    }\n\n    render() {\n\n        const {\n            handleClick,\n            handleSidebarClick,\n            state: {\n                hidden,\n                isSidebarHidden,\n                currentView\n            },\n            props: {\n                signOut,\n                userId\n            }\n        } = this;\n\n        return (\n            <div className='flexDashboardParent'>\n                <Sidebar handleSignOut={signOut} isSidebarHidden={isSidebarHidden}/>\n                <FontAwesomeIcon onClick={handleSidebarClick} className=\"hamburger\" icon={faCaretDown} />\n                {hidden && <div> <FontAwesomeIcon className=\"createPollMobile\" icon={faPlus} id='createPoll' onClick={handleClick} /> </div>}\n                <div className='dashboard'>\n                    {hidden && <div> <button className='createPollButton' id='createPoll' onClick={handleClick}>+ create your own</button> </div>}\n                    {currentView === 'createPoll' && <CreateAPoll userId={userId} />}\n                    <Polls userId={userId} />\n                    <FooterDashboard />\n                </div>\n            </div>\n        );\n    };\n};\n\nexport default Dashboard","import React, { Component } from 'react';\nimport Sidebar from './Sidebar';\nimport FooterDashboard from './FooterDashboard'\nimport firebase from 'firebase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\nimport '../App.scss';\n\nclass ViewPolls extends Component {\n\n  constructor() {\n      super();\n      this.state = {\n          pollQuestions: [],\n          currentPoll: [],\n          currentView: null,\n          hidden: true,\n          isSidebarHidden: true,\n          pollQuestionRef: firebase.database().ref('/publicPolls')\n      }\n  }\n\n  componentDidMount() {\n    const {pollQuestionRef} = this.state;\n    // Going to firebase and check each object (Poll) to see if the first one is checked/voted and storing them into an array\n    pollQuestionRef.on('value', fbData => {\n      const pollData = fbData.val();\n      const pollContent = Object.values(pollData);\n      const pollNum = [];\n\n      for (let key in pollData){  \n        const pollNumbers = {\n          pNumber: key,\n          pName: pollData[key],\n        }\n        pollNum.push(pollNumbers);\n      }\n      this.setState({\n        pollQuestions: pollContent,\n        currentPoll: pollNum,\n      });\n    });\n  }\n\n  // this handle click shows the create a poll section above 'polls' when clicked. \n  handleClick = (e) => {\n      this.setState({\n          currentView: e.target.id,\n          hidden: false,\n      })\n  }\n\n  handleSidebarClick = () => {\n\n      const {\n          isSidebarHidden\n      } = this.state;\n\n      this.setState({\n          isSidebarHidden: !isSidebarHidden\n      })\n  }\n\n  render() {\n\n    const {\n        handleSidebarClick,\n        state: {\n            isSidebarHidden,\n            pollQuestions,\n        },\n        props: {\n            signOut,\n            userId\n        }\n    } = this;\n\n    return (\n      <div className='flexDashboardParent'>\n        <Sidebar handleSignOut={signOut} isSidebarHidden={isSidebarHidden} />\n        <FontAwesomeIcon onClick={handleSidebarClick} className=\"hamburger\" icon={faCaretDown} />\n        \n        <div className='dashboard'>\n            <div className=\"wrapper\">\n              <ul className='viewPollsList'>\n                {\n                  pollQuestions.map((value, index) => {\n                    const optionA = value.answer1;\n                    const optionB = value.answer2;\n                    const totalVotesA = value.votes1;\n                    const totalVotesB = value.votes2;\n                    const pollQ = value.question;\n                    const currentPollQ = index;\n                    const pollCreatedBy = value.pollCreatedBy;\n                    if (pollCreatedBy === userId) {\n                      return (\n                        <li key={index} className='pollItem'>\n                            <div className=\"pollQuestion\">\n                              <p>{pollQ}</p>\n                            </div>\n                            <div className=\"voteButtons\">\n                              <button id={currentPollQ} >\n                              <p className=\"options\">{optionA}</p>\n                                <p className='showVotes'>\n                                  {totalVotesA} votes\n                                </p>\n                              </button>\n                              <button id={currentPollQ}>\n                              <p className=\"options\">{optionB}</p>\n                                <p className='showVotes'>\n                                  {totalVotesB} votes\n                                </p>\n                              </button>\n                            </div>\n                        </li>\n                      );\n                    }\n                  })\n                }\n              </ul>\n            </div>\n            <FooterDashboard />\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default ViewPolls;","import React, { Component } from 'react';\nimport Sidebar from './Sidebar';\nimport jasmine from './../assets/jasmineCarbone.jpg';\nimport sharon from './../assets/sharonYi.jpg';\nimport mehdi from './../assets/mehdiPilehvarian.jpg';\nimport vince from './../assets/vinceDang.jpg';\nimport FooterDashboard from './FooterDashboard'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretDown, faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { faTwitter, faGithubAlt } from '@fortawesome/free-brands-svg-icons'\n\nclass About extends Component {\n    constructor() {\n        super();\n        this.state = {\n            currentView: null,\n            hidden: true,\n            isSidebarHidden: true,\n        }\n    }\n\n    // this handle click shows the create a poll section above 'polls' when clicked. \n    handleClick = (e) => {\n        this.setState({\n            currentView: e.target.id,\n            hidden: false,\n        })\n    }\n    handleSidebarClick = () => {\n        this.setState({\n            isSidebarHidden: !this.state.isSidebarHidden\n        })\n    }\n    render () {\n        const {signOut} = this.props;\n        return (\n            <div className='flexDashboardParent'>\n                <Sidebar handleSignOut={signOut} isSidebarHidden={this.state.isSidebarHidden}/>\n                <FontAwesomeIcon onClick={this.handleSidebarClick} className=\"hamburger\" icon={faCaretDown} />\n                \n                <div className='dashboard'>\n                    <div className='dreamTeam'>\n                        <h1>meet the developers</h1>\n                        <p> and hire them!</p>\n                        <ul className='dreamTeamFlexChild'>\n                            <li className='dreamTeamList'>\n                                <img className='dreamTeamImage' src={jasmine} alt='jasmine on purple background'></img>\n                                <h2>jasmine carbone</h2>\n                                <ul className='socialLinks'>\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"https://github.com/tiltedcanvas\">\n                                    <FontAwesomeIcon icon={faGithubAlt} /></a></li>\n                                    <li><a target='_blank' rel='noopener noreferrer' href='https://twitter.com/tiltedcanvas'><FontAwesomeIcon icon={faTwitter} /></a></li>\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"mailto:jasmine@tiltedcanvas.com\"><FontAwesomeIcon icon={faEnvelope} /></a></li>\n                                </ul>\n                            </li>\n                            <li className='dreamTeamList'>\n                                <img className='dreamTeamImage' src={mehdi} alt='mehdi on a yellow background'></img>\n                                <h2>mehdi pilehvarian</h2>\n                                <ul className='socialLinks'>\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"https://github.com/mantonionip\">\n                                    <FontAwesomeIcon icon={faGithubAlt} /></a></li>\n                                    <li><a target='_blank' rel='noopener noreferrer' href='https://twitter.com/mp_codes'><FontAwesomeIcon icon={faTwitter} /></a></li>\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"mailto:mehdi.pilehvarian@gmail.com\"><FontAwesomeIcon icon={faEnvelope} /></a></li>\n                                </ul>\n                            </li>\n                            <li className='dreamTeamList'>\n                                <img className='dreamTeamImage' src={vince} alt='vincent on a yellow background'></img> \n                                <h2>vincent dang</h2>\n                                <ul className='socialLinks'>\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"https://github.com/DangVincent\">\n                                    <FontAwesomeIcon icon={faGithubAlt} /></a></li>\n                                    <li><a target='_blank' rel='noopener noreferrer' href='https://twitter.com/VinceDCodes'><FontAwesomeIcon icon={faTwitter} /></a></li>\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"mailto:vncntdang@gmail.com\"><FontAwesomeIcon icon={faEnvelope} /></a></li>\n                                </ul>\n                            </li>\n                            <li className='dreamTeamList'>\n                                <img className='dreamTeamImage' src={sharon} alt='sharon on a purple background'></img>\n                                <h2>sharon yi</h2>\n                                <ul className='socialLinks'>\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"https://github.com/sharon-yi\">\n                                    <FontAwesomeIcon icon={faGithubAlt} /></a></li>\n                                    <li><a target='_blank' rel='noopener noreferrer' href='https://twitter.com/sharon_yi'><FontAwesomeIcon icon={faTwitter} /></a></li>\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"mailto:sharon.yi@me.com\"><FontAwesomeIcon icon={faEnvelope} /></a></li>\n                                </ul>\n                            </li>\n                        </ul>\n\n\n                    </div>\n\n\n                    <FooterDashboard />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport Welcome from './components/Welcome';\nimport Dashboard from './components/Dashboard';\nimport ViewPolls from './components/ViewPolls';\nimport firebase from 'firebase';\nimport 'firebase/auth';\nimport About from './components/About';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userId: ''\n        };\n    }\n\n    componentDidMount() {\n        const {setAuthentication} = this;\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                setAuthentication(user);\n            } \n        });\n    }\n\n    setAuthentication = (userInfo) => {\n        this.setState({\n            userId: userInfo.uid,\n        });\n    }\n\n    handleSignOut = () => {\n        firebase.auth().signOut();\n        this.setState({\n            userId: ''\n        });\n    }\n\n    render() {\n\n        const {\n            setAuthentication,\n            handleSignOut,\n            state: {\n                userId\n            }\n        } = this;\n        return (\n            <Router basename='/anonymousVotingBooth'>\n                <div className='App'>\n                    <Route exact path='/' render={() => (<Welcome loggedIn={userId} getAuthentication={setAuthentication}/>)\n                    } />\n                    <Route exact path='/dashboard' render={() => {\n                        if (!userId) {\n                            return <Redirect to='/' />\n                        }\n                        \n                        return (<Dashboard signOut={handleSignOut} userId={userId}/>)\n                    }} />\n                    <Route path='/dashboard/viewpolls' render={() => (<ViewPolls userId={userId}/>)} />\n                    <Route path='/about' component={About} />\n\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}