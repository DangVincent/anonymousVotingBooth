{"version":3,"sources":["assets/backgroundImage1.svg","assets/backgroundImage2.svg","assets/logo.svg","assets/jasmineCarbone.jpg","assets/sharonYi.jpg","assets/mehdiPilehvarian.jpg","assets/vinceDang.jpg","components/AnimatedBackground.js","components/Welcome.js","components/Header.js","components/Sidebar.js","components/firebase.js","components/Thanks.js","components/CreateAPoll.js","components/Polls.js","components/FooterDashboard.js","components/Dashboard.js","components/ViewPolls.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AnimatedBackground","className","id","alt","src","graphic1","graphic2","Component","uiConfig","signInFlow","signInOptions","provider","firebase","auth","GoogleAuthProvider","PROVIDER_ID","customParameters","prompt","firebaseui","AnonymousAuthProvider","Welcome","getAuthentication","this","props","onAuthStateChanged","user","setPersistence","Auth","Persistence","SESSION","then","loggedIn","to","logo","firebaseAuth","Header","href","Sidebar","state","logOutRedirect","handleSignOut","isSidebarHidden","onClick","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Thanks","resetForm","CreateAPoll","handleChange","e","setState","target","value","handleSubmit","userId","preventDefault","pollToAdd","question","answer1","answer2","votes1","votes2","usersVotedList","pollCreatedBy","publicPollsRef","database","ref","Swal","fire","icon","title","text","push","thanksPopup","on","response","poll","val","newPoll","key","eachPoll","pollID","pollName","pollList","onSubmit","htmlFor","maxLength","placeholder","type","onChange","autoComplete","required","Polls","incrementAnswer1Count","currentTarget","currentPoll","pollQuestionRef","pName","userList","includes","vote","child","pNumber","update","answer1TotalVotes","incrementAnswer2Count","voted","answer2TotalVotes","pollQuestions","fbData","pollData","pollContent","Object","values","pollNum","pollNumbers","map","index","optionA","optionB","totalVotesA","totalVotesB","pollQ","currentPollQ","disabled","FooterDashboard","Date","getFullYear","Dashboard","handleClick","currentView","hidden","handleSidebarClick","signOut","faCaretDown","faPlus","ViewPolls","About","jasmine","rel","faGithubAlt","faTwitter","faEnvelope","mehdi","vince","sharon","App","setAuthentication","userInfo","uid","basename","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8de1bfb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundImage1.9fb0d5b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/backgroundImage2.7897cea6.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f8abd45d.svg\";","module.exports = __webpack_public_path__ + \"static/media/jasmineCarbone.7e5d0b53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sharonYi.c21f3cf5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mehdiPilehvarian.6b3f1d4e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vinceDang.c68aa3ac.jpg\";","import React, { Component } from 'react';\r\nimport graphic1 from './../assets/backgroundImage1.svg';\r\nimport graphic2 from './../assets/backgroundImage2.svg';\r\n\r\nclass AnimatedBackground extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='animatedBackground'>\r\n                    <img id='imageOne' className='animatedImage' alt='floating empty poll graphic' src={graphic1}></img>\r\n                    <img id='imageTwo' className='animatedImage' alt='floating empty poll graphic' src={graphic2}></img>\r\n                    <img id='imageThree' className='animatedImage' alt='floating empty poll graphic' src={graphic1}></img>\r\n                    <img id='imageFour' className='animatedImage' alt='floating empty poll graphic' src={graphic2}></img>\r\n                    <img id='imageFive' className='animatedImage' alt='floating empty poll graphic' src={graphic1}></img>\r\n                    <img id='imageSix' className='animatedImage' alt='floating empty poll graphic' src={graphic2}></img>\r\n                </div>\r\n                <div className='animatedBackground'>\r\n                    <img id='imageSeven' className='animatedImage2' alt='floating empty poll graphic' src={graphic1}></img>\r\n                    <img id='imageEight' className='animatedImage2' alt='floating empty poll graphic' src={graphic2}></img>\r\n                    <img id='imageNine' className='animatedImage2' alt='floating empty poll graphic' src={graphic1}></img>\r\n                    <img id='imageTen' className='animatedImage2' alt='floating empty poll graphic' src={graphic2}></img>\r\n                    <img id='imageEleven' className='animatedImage2' alt='floating empty poll graphic' src={graphic1}></img>\r\n                    <img id='imageTwelve' className='animatedImage2' alt='floating empty poll graphic' src={graphic2}></img>\r\n                </div>\r\n                <div className='animatedBackground'>\r\n                    <img id='imageThirteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic1}></img>\r\n                    <img id='imageFourteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic2}></img>\r\n                    <img id='imageFifteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic1}></img>\r\n                    <img id='imageSixteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic2}></img>\r\n                    <img id='imageSeventeen' className='animatedImage3' alt='floating empty poll graphic' src={graphic1}></img>\r\n                    <img id='imageEighteen' className='animatedImage3' alt='floating empty poll graphic' src={graphic2}></img>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnimatedBackground;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport logo from './../assets/logo.svg';\r\nimport firebase from 'firebase';\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport * as firebaseui from 'firebaseui';\r\nimport 'firebase/auth';\r\nimport AnimatedBackground from './AnimatedBackground';\r\n\r\nconst uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [\r\n        {\r\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            customParameters: {\r\n                prompt: 'select_account'\r\n            },\r\n        },\r\n        firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID,\r\n    ],\r\n};\r\n\r\nclass Welcome extends Component {\r\n    componentDidMount() {\r\n        const { getAuthentication } = this.props;\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n                .then(function () {\r\n                    if (user) {\r\n                        getAuthentication(user);\r\n                    }\r\n                    return true;\r\n                })\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const { loggedIn } = this.props;\r\n\r\n        if (loggedIn) {\r\n            return <Redirect to='/dashboard' />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='welcomeSplash'>\r\n                    <div className='wrapper'>\r\n                        <img className='logo bounce-in-fwd' src={logo} alt='versus logo'></img>\r\n                        <p>Ready to find out if people prefer pineapples or ketchup on their pizza? Look no further, with Versus™️, you're able to create an unlimited amount of polls and also vote on other user created polls. Don't hold back, it's all anonymous!</p>\r\n                        <p className='miniText'>You can only vote once, so make it count!</p>\r\n                        <div className='userLoginHome'>\r\n                            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n                        <p className='disclaimerText'>Signing in with an account will let you keep track of the polls you've created.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <AnimatedBackground />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from 'react';\r\nimport logo from './../assets/logo.svg'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <a href='/dashboard'><img className='logo' src={logo} alt='logo for voted app'></img></a>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nclass Sidebar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            logOutRedirect: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            handleSignOut,\r\n            isSidebarHidden\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className={`sideBar${isSidebarHidden ? ' mobileHidden' : ''}`} >\r\n                <Header />\r\n                <NavLink className='sideBarLinks' to='/dashboard/viewpolls'>view your polls</NavLink>\r\n                <NavLink className='sideBarLinks' to='/about'>about us</NavLink>\r\n                <NavLink className='sideBarLinks' onClick={handleSignOut} to='/'>log out</NavLink>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Sidebar","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyARn2Fa86nETijeyn-afjgyoHlkusUXX4I\",\r\n    authDomain: \"anon-voting-booth.firebaseapp.com\",\r\n    databaseURL: \"https://anon-voting-booth.firebaseio.com\",\r\n    projectId: \"anon-voting-booth\",\r\n    storageBucket: \"anon-voting-booth.appspot.com\",\r\n    messagingSenderId: \"297294494416\",\r\n    appId: \"1:297294494416:web:e83fa5e90c4ea456967cd5\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from 'react';\r\n\r\nclass Thanks extends Component {\r\n    render() {\r\n        return (\r\n            <div id='thanksPopup' className='thanksPopup'>\r\n                <h2>Thanks for adding a poll!</h2>\r\n                <button onClick={this.props.resetForm} className='resetForm'>Add another?</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Thanks;","import React, { Component } from 'react';\r\nimport firebase from './firebase';\r\nimport Swal from 'sweetalert2';\r\nimport Thanks from './Thanks';\r\n\r\nclass CreateAPoll extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      question: '',\r\n      answer1: '',\r\n      answer2: '',\r\n      thanksPopup: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Connecting app to firebase\r\n    const dbRef = firebase.database().ref();\r\n    // Storing firebase into variable for use\r\n    dbRef.on('value', (response) => {\r\n      const poll = response.val();\r\n      const newPoll = []\r\n      for (let key in poll) {\r\n        const eachPoll = {\r\n          pollID: key,\r\n          pollName: poll[key]\r\n        }\r\n        newPoll.push(eachPoll)\r\n      }\r\n      // Converting the object into an array and storing into state\r\n      this.setState({\r\n        pollList: newPoll\r\n      });\r\n    });\r\n  }\r\n\r\n  // Binding the input, and setting new values in state\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  }\r\n\r\n  // On submitting a poll, grab user's inputs from the form, add them to firebase\r\n  handleSubmit = (e) => {\r\n    const { userId } = this.props;\r\n    e.preventDefault();\r\n    const pollToAdd = {\r\n      question: this.state.question,\r\n      answer1: this.state.answer1,\r\n      answer2: this.state.answer2,\r\n      votes1: 0,\r\n      votes2: 0,\r\n      usersVotedList: '',\r\n      pollCreatedBy: userId\r\n    };\r\n    const publicPollsRef = firebase.database().ref('/publicPolls');\r\n    if (this.state.answer1 === this.state.answer2) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Are you trying to swing the polls? Your answers cannot be the same!!',\r\n      })\r\n    } else if (pollToAdd.question !== '') {\r\n      publicPollsRef.push(pollToAdd);\r\n      this.setState({\r\n        question: '',\r\n        answer1: '',\r\n        answer2: '',\r\n        thanksPopup: 'showThankYou',\r\n      });\r\n    }\r\n  }\r\n  // resets form to add more and sets thanks state to null\r\n  resetForm = (e) => {\r\n    this.setState({\r\n      thanksPopup: null,\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      handleSubmit,\r\n      handleChange,\r\n      resetForm,\r\n      state: {\r\n        thanksPopup,\r\n        question,\r\n        answer1,\r\n        answer2\r\n      }\r\n    } = this;\r\n\r\n    return (\r\n      <div className='wrapper'>\r\n        {thanksPopup !== 'showThankYou' ?\r\n          <form className='createPoll' id='createPoll' onSubmit={handleSubmit}>\r\n            <h2>Add your poll below</h2>\r\n            <label htmlFor='question'></label>\r\n            <input id='question' maxLength='120' placeholder='Add your question' type='text' onChange={handleChange} value={question} autoComplete='off' required></input>\r\n            <label htmlFor='answer1'></label>\r\n            <input id='answer1' maxLength='20' placeholder='Answer Option One' type='text' onChange={handleChange} value={answer1} autoComplete='off' required></input>\r\n            <label htmlFor='answer2'></label>\r\n            <input id='answer2' maxLength='20' placeholder='Answer Option Two' type='text' onChange={handleChange} value={answer2} autoComplete='off' required></input>\r\n            <button className='addPollButton' type='submit'>Add Poll!</button>\r\n          </form> : <Thanks resetForm={resetForm} />\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default CreateAPoll;","import React, { Component } from 'react';\r\nimport firebase from './firebase';\r\nimport 'firebase/auth';\r\n\r\nclass Polls extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pollQuestions: [],\r\n      currentPoll: [],\r\n      answer1TotalVotes: 0,\r\n      answer2TotalVotes: 0,\r\n      pollQuestionRef: firebase.database().ref('/publicPolls')\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { pollQuestionRef } = this.state;\r\n    // Going to firebase and check each object (Poll) to see if the first one is checked/voted and storing them into an array\r\n    pollQuestionRef.on('value', fbData => {\r\n      const pollData = fbData.val();\r\n      const pollContent = Object.values(pollData);\r\n      const pollNum = [];\r\n\r\n      for (let key in pollData) {\r\n        const pollNumbers = {\r\n          pNumber: key,\r\n          pName: pollData[key],\r\n        }\r\n        pollNum.push(pollNumbers);\r\n      }\r\n      this.setState({\r\n        pollQuestions: pollContent,\r\n        currentPoll: pollNum,\r\n      });\r\n    });\r\n  }\r\n\r\n  // Incrementing the option one every time a user votes for option one in any vote poll\r\n  incrementAnswer1Count = (e) => {\r\n    e.preventDefault();\r\n    const { id } = e.currentTarget;\r\n    const {\r\n      state: {\r\n        currentPoll,\r\n        pollQuestionRef,\r\n      },\r\n      props: {\r\n        userId\r\n      }\r\n    } = this;\r\n\r\n    const usersVotedList = currentPoll[id].pName.usersVotedList;\r\n    const userList = [];\r\n\r\n    for (let user in usersVotedList) {\r\n      userList.push(usersVotedList[user])\r\n    }\r\n    if (!userList.includes(userId)) {\r\n      const vote = currentPoll[id].pName.votes1 + 1;\r\n      pollQuestionRef.child(`${currentPoll[id].pNumber}`).child('usersVotedList').push(userId);\r\n      pollQuestionRef.child(`${currentPoll[id].pNumber}`).update({\r\n        votes1: vote,\r\n      });\r\n      this.setState({\r\n        answer1TotalVotes: vote,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Incrementing the option two every time a user votes for option two in any vote poll\r\n  incrementAnswer2Count = (e) => {\r\n    e.preventDefault();\r\n    const { id } = e.currentTarget;\r\n    const { currentPoll, pollQuestionRef } = this.state;\r\n    const { userId } = this.props;\r\n    const usersVotedList = currentPoll[id].pName.usersVotedList;\r\n    const userList = [];\r\n    for (let user in usersVotedList) {\r\n      userList.push(usersVotedList[user])\r\n    }\r\n    if (!userList.includes(userId)) {\r\n      currentPoll[id].voted = true;\r\n      const vote = currentPoll[id].pName.votes2 + 1;\r\n      pollQuestionRef.child(`${currentPoll[id].pNumber}`).child('usersVotedList').push(userId);\r\n      pollQuestionRef.child(`${currentPoll[id].pNumber}`).update({\r\n        votes2: vote,\r\n      });\r\n      this.setState({\r\n        answer2TotalVotes: vote,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      incrementAnswer1Count,\r\n      incrementAnswer2Count,\r\n      state: {\r\n        pollQuestions,\r\n        currentPoll\r\n      },\r\n      props: {\r\n        userId\r\n      }\r\n    } = this;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <ul className='pollsList'>\r\n          {\r\n            pollQuestions.map((value, index) => {\r\n              const optionA = value.answer1;\r\n              const optionB = value.answer2;\r\n              const totalVotesA = value.votes1;\r\n              const totalVotesB = value.votes2;\r\n              const pollQ = value.question;\r\n              const currentPollQ = index;\r\n              let voted = currentPoll[index].voted;\r\n              const usersVotedList = currentPoll[index].pName.usersVotedList;\r\n              const userList = [];\r\n              for (let user in usersVotedList) {\r\n                userList.push(usersVotedList[user])\r\n              }\r\n              if (userList.includes(userId)) {\r\n                voted = true;\r\n              }\r\n              return (\r\n                <li key={index} className='pollItem'>\r\n                  <div className=\"pollQuestion\">\r\n                    <p>{pollQ}</p>\r\n                  </div>\r\n                  <div className=\"voteButtons\">\r\n                    <button\r\n                      id={currentPollQ}\r\n                      onClick={incrementAnswer1Count}\r\n                      value='votes1'\r\n                      disabled={voted ? true : false}\r\n                    >\r\n                      <p className=\"options\">{optionA}</p>\r\n\r\n                      <p className={voted ? 'showVotes' : null}>\r\n                        {totalVotesA} votes\r\n                          </p>\r\n                    </button>\r\n                    <button\r\n                      id={currentPollQ}\r\n                      onClick={incrementAnswer2Count}\r\n                      value='votes2'\r\n                      disabled={voted ? true : false}\r\n                    >\r\n                      <p className=\"options\">{optionB}</p>\r\n                      <p className={voted ? 'showVotes' : null}>\r\n                        {totalVotesB} votes\r\n                          </p>\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Polls;","import React, { Component } from 'react';\r\n\r\nclass FooterDashboard extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <footer>\r\n        <div className='footerContent'>\r\n          <p>copyright &copy; <span id=\"year\">{new Date().getFullYear()}</span> &nbsp;-&nbsp; all rights reserved </p>\r\n          <p>sharon yi, jasmine carbone, mehdi pilehvarian, vincent dang</p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default FooterDashboard;","import React, { Component } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport CreateAPoll from './CreateAPoll';\r\nimport Polls from './Polls';\r\nimport FooterDashboard from './FooterDashboard'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentView: null,\r\n            hidden: true,\r\n            isSidebarHidden: true,\r\n        }\r\n    }\r\n    \r\n    // this handle click shows the create a poll section above 'polls' when clicked. \r\n    handleClick = (e) => {\r\n        this.setState({\r\n            currentView: e.target.id,\r\n            hidden: false,\r\n        })\r\n    }\r\n\r\n    handleSidebarClick = () => {\r\n\r\n        const {\r\n            isSidebarHidden\r\n        } = this.state;\r\n\r\n        this.setState({\r\n            isSidebarHidden: !isSidebarHidden\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            handleClick,\r\n            handleSidebarClick,\r\n            state: {\r\n                hidden,\r\n                isSidebarHidden,\r\n                currentView\r\n            },\r\n            props: {\r\n                signOut,\r\n                userId\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <div className='flexDashboardParent'>\r\n                <Sidebar handleSignOut={signOut} isSidebarHidden={isSidebarHidden} />\r\n                <FontAwesomeIcon onClick={handleSidebarClick} className=\"hamburger\" icon={faCaretDown} />\r\n                {hidden && <div> <FontAwesomeIcon className=\"createPollMobile\" icon={faPlus} id='createPoll' onClick={handleClick} /> </div>}\r\n                <div className='dashboard'>\r\n                    {hidden && <div> <button className='createPollButton' id='createPoll' onClick={handleClick}>+ create your own</button> </div>}\r\n                    {currentView === 'createPoll' && <CreateAPoll userId={userId} />}\r\n                    <Polls userId={userId} />\r\n                    <FooterDashboard />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Dashboard","import React, { Component } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport FooterDashboard from './FooterDashboard'\r\nimport firebase from 'firebase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass ViewPolls extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pollQuestions: [],\r\n      currentPoll: [],\r\n      currentView: null,\r\n      hidden: true,\r\n      isSidebarHidden: true,\r\n      pollQuestionRef: firebase.database().ref('/publicPolls')\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { pollQuestionRef } = this.state;\r\n    // Going to firebase and check each object (Poll) to see if the first one is checked/voted and storing them into an array\r\n    pollQuestionRef.on('value', fbData => {\r\n      const pollData = fbData.val();\r\n      const pollContent = Object.values(pollData);\r\n      const pollNum = [];\r\n\r\n      for (let key in pollData) {\r\n        const pollNumbers = {\r\n          pNumber: key,\r\n          pName: pollData[key],\r\n        }\r\n        pollNum.push(pollNumbers);\r\n      }\r\n      this.setState({\r\n        pollQuestions: pollContent,\r\n        currentPoll: pollNum,\r\n      });\r\n    });\r\n  }\r\n\r\n  // this handle click shows the create a poll section above 'polls' when clicked. \r\n  handleClick = (e) => {\r\n    this.setState({\r\n      currentView: e.target.id,\r\n      hidden: false,\r\n    })\r\n  }\r\n\r\n  handleSidebarClick = () => {\r\n\r\n    const {\r\n      isSidebarHidden\r\n    } = this.state;\r\n\r\n    this.setState({\r\n      isSidebarHidden: !isSidebarHidden\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      handleSidebarClick,\r\n      state: {\r\n        isSidebarHidden,\r\n        pollQuestions,\r\n      },\r\n      props: {\r\n        signOut,\r\n        userId\r\n      }\r\n    } = this;\r\n\r\n    return (\r\n      <div className='flexDashboardParent'>\r\n        <Sidebar handleSignOut={signOut} isSidebarHidden={isSidebarHidden} />\r\n        <FontAwesomeIcon onClick={handleSidebarClick} className=\"hamburger\" icon={faCaretDown} />\r\n\r\n        <div className='dashboard'>\r\n          <div className=\"wrapper\">\r\n            <ul className='viewPollsList'>\r\n              {pollQuestions.map((value, index) => {\r\n                const optionA = value.answer1;\r\n                const optionB = value.answer2;\r\n                const totalVotesA = value.votes1;\r\n                const totalVotesB = value.votes2;\r\n                const pollQ = value.question;\r\n                const currentPollQ = index;\r\n                const pollCreatedBy = value.pollCreatedBy;\r\n                if (pollCreatedBy === userId) {\r\n                  return (\r\n                    <li key={index} className='pollItem'>\r\n                      <div className=\"pollQuestion\">\r\n                        <p>{pollQ}</p>\r\n                      </div>\r\n                      <div className=\"voteButtons\">\r\n                        <button id={currentPollQ} >\r\n                          <p className=\"options\">{optionA}</p>\r\n                          <p className='showVotes'>\r\n                            {totalVotesA} votes\r\n                                </p>\r\n                        </button>\r\n                        <button id={currentPollQ}>\r\n                          <p className=\"options\">{optionB}</p>\r\n                          <p className='showVotes'>\r\n                            {totalVotesB} votes\r\n                                </p>\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                }\r\n              })\r\n              }\r\n            </ul>\r\n          </div>\r\n          <FooterDashboard />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ViewPolls;","import React, { Component } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport jasmine from '../assets/jasmineCarbone.jpg';\r\nimport sharon from '../assets/sharonYi.jpg';\r\nimport mehdi from '../assets/mehdiPilehvarian.jpg';\r\nimport vince from '../assets/vinceDang.jpg';\r\nimport FooterDashboard from './FooterDashboard'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretDown, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTwitter, faGithubAlt } from '@fortawesome/free-brands-svg-icons'\r\n\r\nclass About extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            currentView: null,\r\n            hidden: true,\r\n            isSidebarHidden: true,\r\n        }\r\n    }\r\n\r\n    // this handle click shows the create a poll section above 'polls' when clicked. \r\n    handleClick = (e) => {\r\n        this.setState({\r\n            currentView: e.target.id,\r\n            hidden: false,\r\n        })\r\n    }\r\n    handleSidebarClick = () => {\r\n        this.setState({\r\n            isSidebarHidden: !this.state.isSidebarHidden\r\n        })\r\n    }\r\n    render () {\r\n        const {signOut} = this.props;\r\n        return (\r\n            <div className='flexDashboardParent'>\r\n                <Sidebar handleSignOut={signOut} isSidebarHidden={this.state.isSidebarHidden}/>\r\n                <FontAwesomeIcon onClick={this.handleSidebarClick} className=\"hamburger\" icon={faCaretDown} />\r\n                \r\n                <div className='dashboard'>\r\n                    <div className='dreamTeam'>\r\n                        <h1>meet the developers</h1>\r\n                        <p> and hire them!</p>\r\n                        <ul className='dreamTeamFlexChild'>\r\n                            <li className='dreamTeamList'>\r\n                                <img className='dreamTeamImage' src={jasmine} alt='jasmine on purple background'></img>\r\n                                <h2>jasmine carbone</h2>\r\n                                <ul className='socialLinks'>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"https://github.com/tiltedcanvas\">\r\n                                    <FontAwesomeIcon icon={faGithubAlt} /></a></li>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href='https://twitter.com/tiltedcanvas'><FontAwesomeIcon icon={faTwitter} /></a></li>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"mailto:jasmine@tiltedcanvas.com\"><FontAwesomeIcon icon={faEnvelope} /></a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className='dreamTeamList'>\r\n                                <img className='dreamTeamImage' src={mehdi} alt='mehdi on a yellow background'></img>\r\n                                <h2>mehdi pilehvarian</h2>\r\n                                <ul className='socialLinks'>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"https://github.com/mantonionip\">\r\n                                    <FontAwesomeIcon icon={faGithubAlt} /></a></li>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href='https://twitter.com/mp_codes'><FontAwesomeIcon icon={faTwitter} /></a></li>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"mailto:mehdi.pilehvarian@gmail.com\"><FontAwesomeIcon icon={faEnvelope} /></a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className='dreamTeamList'>\r\n                                <img className='dreamTeamImage' src={vince} alt='vincent on a yellow background'></img> \r\n                                <h2>vincent dang</h2>\r\n                                <ul className='socialLinks'>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"https://github.com/DangVincent\">\r\n                                    <FontAwesomeIcon icon={faGithubAlt} /></a></li>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href='https://twitter.com/VinceDCodes'><FontAwesomeIcon icon={faTwitter} /></a></li>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"mailto:vncntdang@gmail.com\"><FontAwesomeIcon icon={faEnvelope} /></a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className='dreamTeamList'>\r\n                                <img className='dreamTeamImage' src={sharon} alt='sharon on a purple background'></img>\r\n                                <h2>sharon yi</h2>\r\n                                <ul className='socialLinks'>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"https://github.com/sharon-yi\">\r\n                                    <FontAwesomeIcon icon={faGithubAlt} /></a></li>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href='https://twitter.com/sharon_yi'><FontAwesomeIcon icon={faTwitter} /></a></li>\r\n                                    <li><a target='_blank' rel='noopener noreferrer' href=\"mailto:sharon.yi@me.com\"><FontAwesomeIcon icon={faEnvelope} /></a></li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <FooterDashboard />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport './styles/App.scss';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport Welcome from './components/Welcome';\r\nimport Dashboard from './components/Dashboard';\r\nimport ViewPolls from './components/ViewPolls';\r\nimport About from './components/About';\r\nimport firebase from 'firebase';\r\nimport 'firebase/auth';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userId: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { setAuthentication } = this;\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setAuthentication(user);\r\n            }\r\n        });\r\n    }\r\n\r\n    setAuthentication = (userInfo) => {\r\n        this.setState({\r\n            userId: userInfo.uid,\r\n        });\r\n    }\r\n\r\n    handleSignOut = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({\r\n            userId: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            setAuthentication,\r\n            handleSignOut,\r\n            state: {\r\n                userId\r\n            }\r\n        } = this;\r\n        return (\r\n            <Router basename='/anonymousVotingBooth'>\r\n                <div className='App'>\r\n                    <Route exact path='/' render={() => (<Welcome loggedIn={userId} getAuthentication={setAuthentication} />)\r\n                    } />\r\n                    <Route exact path='/dashboard' render={() => {\r\n                        if (!userId) {\r\n                            return <Redirect to='/' />\r\n                        }\r\n\r\n                        return (<Dashboard signOut={handleSignOut} userId={userId} />)\r\n                    }} />\r\n                    <Route path='/dashboard/viewpolls' render={() => (<ViewPolls userId={userId} />)} />\r\n                    <Route path='/about' component={About} />\r\n\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}